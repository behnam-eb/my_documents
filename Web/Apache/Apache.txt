--------------------------------------------------------------------------
The Apache HTTP server is the most widely-used web server in the world. It provides many powerful features including dynamically
loadable modules, robust media support, and extensive integration with other popular software.

  /etc/httpd/
              |-conf/
              |-conf.d/
              |-conf.modules.d/
              |-logs -> link to /var/log/httpd/
              |-modules -> link to /var/lib64/httpd/modules/
              |-run -> link to /run/httpd
--------------------------------------------------------------------------
$ yum install httpd
$ systemctl start httpd
$ systemctl enable httpd
$ firewall-cmd --permanent --add-service=http
$ firewall-cmd --permanent --add-service=https
$ firewall-cmd --reload
--------------------------------------------------------------------------
https://httpd.apache.org/docs/2.4/configuring.html
--------------------------------------------------------------------------
Default httpd config file:
 /etc/httpd/conf/httpd.conf
      ServerRoot "/etc/httpd"
      Listen 80
      Include conf.modules.d/*.conf
      User apache
      Group apache
      ServerAdmin root@localhost
      <Directory />   ===================> directory / kole system amel ro mibande
          AllowOverride none
          Require all denied
      </Directory>
      DocumentRoot "/var/www/html"
      <Directory "/var/www">  ===========> hala miad be jahaie ke bayad dastresi dashte bashan yeki yeki mide
          AllowOverride None  ==> When this directive is set to None and AllowOverrideList is set to None, .htaccess files are completely ignored
                                   . In this case, the server will not even attempt to read .htaccess files in the filesystem
                                   https://httpd.apache.org/docs/2.4/mod/core.html#allowoverride
          Require all granted
      </Directory>
      <Directory "/var/www/html">
          Options Indexes FollowSymLinks  => The Options directive controls which server features are available in a particular directory.
                                             FollowSymLinks -> The server will follow symbolic links in this directory. This is the default setting.
                                             Indexes -> If a URL which maps to a directory is requested and there is no DirectoryIndex (e.g., index.html)
                                                        in that directory, then mod_autoindex will return a formatted listing of the directory.
                                             All -> All options except for MultiViews.
                                             ExecCGI -> Execution of CGI scripts using mod_cgi is permitted.
                                             Includes -> Server-side includes provided by mod_include are permitted.
                                             ...
          AllowOverride None
          Require all granted
      </Directory>
      <IfModule dir_module>
          DirectoryIndex index.html
      </IfModule>
      <Files ".ht*">  ====================> file haye htaccess ro beband
          Require all denied
      </Files>
      ErrorLog "logs/error_log"
      LogLevel warn
      <IfModule log_config_module>
          LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
          LogFormat "%h %l %u %t \"%r\" %>s %b" common
          <IfModule logio_module>
            LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
          </IfModule>
          CustomLog "logs/access_log" combined
      </IfModule>
      <IfModule alias_module>
          ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
      </IfModule>
      <Directory "/var/www/cgi-bin">
          AllowOverride None
          Options None
          Require all granted
      </Directory>
      <IfModule mime_module>
          TypesConfig /etc/mime.types
          AddType application/x-compress .Z
          AddType application/x-gzip .gz .tgz
          AddType text/html .shtml
          AddOutputFilter INCLUDES .shtml
      </IfModule>
      AddDefaultCharset UTF-8
      <IfModule mime_magic_module>
          MIMEMagicFile conf/magic
      </IfModule>
      EnableSendfile on
      IncludeOptional conf.d/*.conf    
--------------------------------------------------------------------------
Setting Up Virtual Hosts (Recommended):
$ mkdir -p /var/www/[your_domain]/html
$ mkdir -p /var/www/[your_domain]/log
$ chown -R $USER:$USER /var/www/your_domain/html
$ chmod -R 755 /var/www
$ vim /var/www/your_domain/html/index.html
        <html>
          <head>
            <title>Welcome to your website!</title>
          </head>
          <body>
            <h1>Success! The your_domain virtual host is working!</h1>
          </body>
        </html>      
$ mkdir /etc/httpd/sites-available /etc/httpd/sites-enabled
$ vim /etc/httpd/conf/httpd.conf      ============================================> deafualt httpd config file
        IncludeOptional sites-enabled/*.conf
$ vim /etc/httpd/sites-available/[your_domain].conf        
        <VirtualHost *:80>
            ServerName www.your_domain
            ServerAlias your_domain
            DocumentRoot /var/www/your_domain/html
            ErrorLog /var/www/your_domain/log/error.log
            CustomLog /var/www/your_domain/log/requests.log combined
        </VirtualHost>      
$ ln -s /etc/httpd/sites-available/[your_domain].conf /etc/httpd/sites-enabled/[your_domain].conf  
---------------------
**SELinux is configured to work with the default Apache configuration. Since you set up a custom log directory in the virtual hosts
configuration file, you will receive an error if you attempt to start the Apache service. To resolve this, you need to update the 
SELinux policies to allow Apache to write to the necessary files. **

$ setsebool -P httpd_unified 1   => httpd_unified is the boolean that will tell SELinux to treat all Apache processes 
                                     as the same type, so you enabled it with a value of 1.
$ ls -dZ /var/www/[your_domain]/log/
$ semanage fcontext -a -t httpd_log_t "/var/www/your_domain/log(/.*)?"
$ restorecon -R -v /var/www/your_domain/log
$ ls -dZ /var/www/your_domain/log/
---------------------
$ systemctl restart httpd
--------------------------------------------------------------------------
